// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using login_api_iw_js.Data;

#nullable disable

namespace login_api_iw_js.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Tema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tema", (string)null);
                });

            modelBuilder.Entity("login_api_iw_js.Models.Hito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ObjetivoId")
                        .HasColumnType("int");

                    b.Property<int>("TemaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ObjetivoId");

                    b.HasIndex("TemaId");

                    b.ToTable("Hito", (string)null);
                });

            modelBuilder.Entity("login_api_iw_js.Models.Objetivo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TemaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TemaId");

                    b.ToTable("Objetivo", (string)null);
                });

            modelBuilder.Entity("login_api_iw_js.Models.Progreso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Escala")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HitoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HitoId");

                    b.ToTable("Progreso", (string)null);
                });

            modelBuilder.Entity("login_api_iw_js.Models.Recomendacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Mensaje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NivelRiesgo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TemaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TemaId");

                    b.ToTable("Recomendacion");
                });

            modelBuilder.Entity("login_api_iw_js.Models.Hito", b =>
                {
                    b.HasOne("login_api_iw_js.Models.Objetivo", "Objetivo")
                        .WithMany("Hitos")
                        .HasForeignKey("ObjetivoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tema", "Tema")
                        .WithMany("Hitos")
                        .HasForeignKey("TemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Objetivo");

                    b.Navigation("Tema");
                });

            modelBuilder.Entity("login_api_iw_js.Models.Objetivo", b =>
                {
                    b.HasOne("Tema", "Tema")
                        .WithMany("Objetivos")
                        .HasForeignKey("TemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tema");
                });

            modelBuilder.Entity("login_api_iw_js.Models.Progreso", b =>
                {
                    b.HasOne("login_api_iw_js.Models.Hito", "Hito")
                        .WithMany("Progresos")
                        .HasForeignKey("HitoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hito");
                });

            modelBuilder.Entity("login_api_iw_js.Models.Recomendacion", b =>
                {
                    b.HasOne("Tema", "Tema")
                        .WithMany("Recomendaciones")
                        .HasForeignKey("TemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tema");
                });

            modelBuilder.Entity("Tema", b =>
                {
                    b.Navigation("Hitos");

                    b.Navigation("Objetivos");

                    b.Navigation("Recomendaciones");
                });

            modelBuilder.Entity("login_api_iw_js.Models.Hito", b =>
                {
                    b.Navigation("Progresos");
                });

            modelBuilder.Entity("login_api_iw_js.Models.Objetivo", b =>
                {
                    b.Navigation("Hitos");
                });
#pragma warning restore 612, 618
        }
    }
}
